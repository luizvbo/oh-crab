# This file is based on the work from https://github.com/denisidoro/navi,
# licensed under the Apache 2.0 license. The license can be found in
# https://github.com/denisidoro/navi/blob/master/LICENSE

on: [push]

name: CI

env:
  MSRV_FEATURES: "--all-features"

jobs:
  crate_metadata:
    name: Extract crate metadata
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Extract crate information
      id: crate_metadata
      run: |
        cargo metadata --no-deps --format-version 1 | jq -r '"msrv=" + .packages[0].rust_version' | tee -a $GITHUB_OUTPUT
    outputs:
      msrv: ${{ steps.crate_metadata.outputs.msrv }}

  ensure_cargo_fmt:
    name: Ensure 'cargo fmt' has been run
    runs-on: ubuntu-20.04
    steps:
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - uses: actions/checkout@v4
    - run: cargo fmt -- --check

  cargo_clippy:
    name: Run cargo clippy using the minimum supported rust version
    runs-on: ubuntu-20.04
    needs: crate_metadata
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: Install rust toolchain (v${{ needs.crate_metadata.outputs.msrv }})
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ needs.crate_metadata.outputs.msrv }}
        components: clippy
    - name: Run clippy (on minimum supported rust version to prevent warnings we can't fix)
      run: cargo clippy --all-targets ${{ env.MSRV_FEATURES }}
    - name: Run tests
      run: cargo test --locked ${{ env.MSRV_FEATURES }}
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Prep environment to test compiled-in paths
        run: |
          mkdir /tmp/cheats-dir
          touch /tmp/config-file

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        env:
          NAVI_PATH: /tmp/cheats-dir
          NAVI_CONFIG: /tmp/config-file
        with:
          command: test

      - name: Run cargo test
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: test

  lints:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      # - name: Install stable toolchain
      #   uses: actions-rs/toolchain@v1
      #   with:
      #     profile: minimal
      #     toolchain: stable
      #     override: true
      #     components: rustfmt, clippy

      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: fmt
          args: --all -- --check

      - name: Run cargo clippy
        uses: actions-rs/cargo@v1
        continue-on-error: false
        with:
          command: clippy
          args: -- -D warnings
